<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TokenPermissionDescription_Account" xml:space="preserve">
    <value>Votre nom de compte, votre identifiant, votre monde de résidence et la liste de vos guildes. Permission requise.</value>
  </data>
  <data name="TokenPermissionDescription_Inventories" xml:space="preserve">
    <value>Votre banque, les matériaux stockés, les déverrouillages de recettes et les inventaires de vos personnages.</value>
  </data>
  <data name="TokenPermissionDescription_Characters" xml:space="preserve">
    <value>Les informations de base sur vos personnages.</value>
  </data>
  <data name="TokenPermissionDescription_Tradingpost" xml:space="preserve">
    <value>Vos transactions au comptoir.</value>
  </data>
  <data name="TokenPermissionDescription_Wallet" xml:space="preserve">
    <value>Votre portefeuille de compte.</value>
  </data>
  <data name="TokenPermissionDescription_Unlocks" xml:space="preserve">
    <value>Vos déverrouillages de garde-robe (apparences, teintures, miniatures, coups de grâce etc.) et les apparences équipées.</value>
  </data>
  <data name="TokenPermissionDescription_Pvp" xml:space="preserve">
    <value>Vos statistiques en JcJ, l'historique des matchs, la progression en parcours de récompenses et les informations liées aux arènes personnalisées.</value>
  </data>
  <data name="TokenPermissionDescription_Builds" xml:space="preserve">
    <value>Vos spécialisations, aptitudes, compétences et l'équipement équipés pour tous les modes de jeu.</value>
  </data>
  <data name="TokenPermissionDescription_Progression" xml:space="preserve">
    <value>Vos succès, statuts de déverrouillage de donjons, assignement de vos points de maîtrise et progression générale en JcE.</value>
  </data>
  <data name="TokenPermissionDescription_Guilds" xml:space="preserve">
    <value>La liste des membres, l'historique et le message du jour de toutes les guildes dont vous êtes membre.</value>
  </data>
  <data name="TokenStatus_InvalidToken" xml:space="preserve">
    <value>Clé invalide</value>
  </data>
  <data name="TokenStatus_AccountFailed" xml:space="preserve">
    <value>La récupération des informations du compte a échoué</value>
  </data>
  <data name="TokenStatus_PartialPermission" xml:space="preserve">
    <value>Permissions manquantes dans la clé</value>
  </data>
  <data name="TokenStatus_ValidToken" xml:space="preserve">
    <value>{0} ({1}) - Clé valide</value>
  </data>
  <data name="Token_NoName" xml:space="preserve">
    <value>(sans nom)</value>
  </data>
  <data name="ManageApiKeys_Title" xml:space="preserve">
    <value>Enregistrer un clé d'API</value>
  </data>
  <data name="ManageApiKeys_Register" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="ManageApiKeys_DeleteToken" xml:space="preserve">
    <value>Supprimer la clé</value>
  </data>
  <data name="AccountInfo_Commander" xml:space="preserve">
    <value>Commandant</value>
  </data>
  <data name="AccountInfo_Character" xml:space="preserve">
    <value>Personnage</value>
  </data>
  <data name="TokenStatus_MissingMinPermission" xml:space="preserve">
    <value>Permissions requises manquantes</value>
  </data>
  <data name="CreateTokenInstructions_Warning" xml:space="preserve">
    <value>Vous pouvez enregistrer une clé sans toutes les permissions,
mais certaines fonctions et modules risquent de ne
pas fonctionner correctement.

Au minimum, les permissions "account" et "characters"
sont requises.</value>
  </data>
  <data name="CreateTokenInstructions_Step1" xml:space="preserve">
    <value>Accédez à la page officielle des applications.</value>
  </data>
  <data name="Link_ManageApplications" xml:space="preserve">
    <value>Gérer les applications</value>
  </data>
  <data name="CreateTokenInstructions_Step2" xml:space="preserve">
    <value>Cliquez sur "Nouvelle clé".</value>
  </data>
  <data name="CreateTokenInstructions_Step3" xml:space="preserve">
    <value>Sélectionnez toutes les permissions
et appuyez sur le bouton
"CRÉER UNE CLÉ D'APPLICATION".</value>
  </data>
  <data name="CreateTokenInstructions_Step4" xml:space="preserve">
    <value>Copiez la nouvelle clé.</value>
  </data>
  <data name="CreateTokenInstructions_Step5" xml:space="preserve">
    <value>Collez la clé dane le champ ci-dessus
et appuyez sur "Enregistrer".</value>
  </data>
  <data name="ManageApiKeysSection" xml:space="preserve">
    <value>Gérer les clés d'API</value>
  </data>
  <data name="TokenStatus_FailedToLoad" xml:space="preserve">
    <value>Echec du chargement de la clé.</value>
  </data>
</root>